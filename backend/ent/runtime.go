// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/chat2542/app/ent/schema"
	"github.com/chat2542/app/ent/scholarshipinformation"
	"github.com/chat2542/app/ent/scholarshiptype"
	"github.com/chat2542/app/ent/semester"
	"github.com/chat2542/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	scholarshipinformationFields := schema.Scholarshipinformation{}.Fields()
	_ = scholarshipinformationFields
	// scholarshipinformationDescScholarshipName is the schema descriptor for Scholarship_name field.
	scholarshipinformationDescScholarshipName := scholarshipinformationFields[0].Descriptor()
	// scholarshipinformation.ScholarshipNameValidator is a validator for the "Scholarship_name" field. It is called by the builders before save.
	scholarshipinformation.ScholarshipNameValidator = scholarshipinformationDescScholarshipName.Validators[0].(func(string) error)
	scholarshiptypeFields := schema.Scholarshiptype{}.Fields()
	_ = scholarshiptypeFields
	// scholarshiptypeDescTypeName is the schema descriptor for Type_name field.
	scholarshiptypeDescTypeName := scholarshiptypeFields[0].Descriptor()
	// scholarshiptype.TypeNameValidator is a validator for the "Type_name" field. It is called by the builders before save.
	scholarshiptype.TypeNameValidator = scholarshiptypeDescTypeName.Validators[0].(func(string) error)
	semesterFields := schema.Semester{}.Fields()
	_ = semesterFields
	// semesterDescSemester is the schema descriptor for Semester field.
	semesterDescSemester := semesterFields[0].Descriptor()
	// semester.SemesterValidator is a validator for the "Semester" field. It is called by the builders before save.
	semester.SemesterValidator = semesterDescSemester.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for Email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
