// Code generated by entc, DO NOT EDIT.

package scholarshiptype

const (
	// Label holds the string label denoting the scholarshiptype type in the database.
	Label = "scholarshiptype"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTypeName holds the string denoting the type_name field in the database.
	FieldTypeName = "type_name"

	// EdgeScholarshipinformation holds the string denoting the scholarshipinformation edge name in mutations.
	EdgeScholarshipinformation = "Scholarshipinformation"
	// EdgeScholarshipRequest holds the string denoting the scholarshiprequest edge name in mutations.
	EdgeScholarshipRequest = "ScholarshipRequest"

	// Table holds the table name of the scholarshiptype in the database.
	Table = "scholarshiptypes"
	// ScholarshipinformationTable is the table the holds the Scholarshipinformation relation/edge.
	ScholarshipinformationTable = "scholarshipinformations"
	// ScholarshipinformationInverseTable is the table name for the Scholarshipinformation entity.
	// It exists in this package in order to avoid circular dependency with the "scholarshipinformation" package.
	ScholarshipinformationInverseTable = "scholarshipinformations"
	// ScholarshipinformationColumn is the table column denoting the Scholarshipinformation relation/edge.
	ScholarshipinformationColumn = "scholarshiptype_scholarshipinformation"
	// ScholarshipRequestTable is the table the holds the ScholarshipRequest relation/edge.
	ScholarshipRequestTable = "scholarship_requests"
	// ScholarshipRequestInverseTable is the table name for the ScholarshipRequest entity.
	// It exists in this package in order to avoid circular dependency with the "scholarshiprequest" package.
	ScholarshipRequestInverseTable = "scholarship_requests"
	// ScholarshipRequestColumn is the table column denoting the ScholarshipRequest relation/edge.
	ScholarshipRequestColumn = "scholarshiptype_scholarship_request"
)

// Columns holds all SQL columns for scholarshiptype fields.
var Columns = []string{
	FieldID,
	FieldTypeName,
}

var (
	// TypeNameValidator is a validator for the "Type_name" field. It is called by the builders before save.
	TypeNameValidator func(string) error
)
